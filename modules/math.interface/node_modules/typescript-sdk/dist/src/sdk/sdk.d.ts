import { IIPData, IResponseAuth, ISdkConfig, ISdkSettings, ICart, IShopifyCart } from "../common/interfaces";
import { SdkService } from "../common/services/sdk";
import { Subject } from 'rxjs';
import { SdkUtils } from "./utils";
import { CartSynchronize } from "./synchronize";
import { SdkMulticalculate } from "./multicalculate";
export declare class SdkConfig {
    settings: ISdkSettings;
    apiConfig: ISdkConfig;
    constructor(settings: ISdkSettings);
    setConfigAPI(isBeta: boolean, isPreProd: boolean): ISdkConfig;
}
export declare class Sdk extends SdkConfig {
    common: SdkUtils;
    cartSynchronize: CartSynchronize;
    sdkMulticalculate: SdkMulticalculate;
    sdkService: SdkService;
    authData: IResponseAuth;
    ipData: IIPData;
    cartData: ICart;
    isAuthenticated: boolean;
    $authenticate: Subject<{}>;
    shopifyCart: IShopifyCart;
    constructor(settings: ISdkSettings);
    private style;
    init(): void;
    subscribes(): void;
    instanceCartSynchronize(): void;
    onready(f: any): void;
    setLocation(): void;
    getIp(): void;
    authenticate(ipdata: IIPData): void;
    setAuthStorage(): void;
    setAuthHeaders(): void;
    getCartAndValidCountryChange(cartId: string): void;
    setSessionStorage(): void;
    authStoreValidateOnCompleteExpiration(): void;
    initChangeCountry(): void;
    callCartJs(): void;
    callMulticalculate(): void;
    private addElementStyleToRemovePriceStyle();
    editPriceStyle(visible: boolean): void;
}
