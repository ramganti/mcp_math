import { Http } from "../utils/http";
import { IIPData, ISdkSettings, IResponseAuth, ISdkConfig, IBodyMulticalculate, ICart, IResponseMulticaculate } from "../interfaces";
import { Observable, Subject } from "rxjs";
import { AjaxResponse } from "rxjs/ajax";
import { IMagentoDeleteBody } from "../interfaces/sdk";
export declare class SdkService extends Http {
    settings: ISdkSettings;
    apiConfig: ISdkConfig;
    $cartJs: Subject<{}>;
    constructor(settings: ISdkSettings, apiConfig: ISdkConfig);
    authHeaders: Object;
    setAuthHeader(token: string, merchantCode: string): void;
    getIP(): Observable<IIPData>;
    authenticate(body: IIPData): Observable<IResponseAuth>;
    getCart(cartId: string): Observable<ICart>;
    getMulticalculate(body: IBodyMulticalculate, headers?: {}): Observable<IResponseMulticaculate>;
    getCartJs(): Observable<AjaxResponse>;
    getHTMLMulticalculate(url: string): Observable<string>;
    addProducts(cartId: string, body: any, headers: {}): Observable<any>;
    editProducts(cartId: string, body: any, headers: {}): Observable<any>;
    removeProducts(cartId: string, productId: string, headers: {}): Observable<any>;
    removeCart(cartId: string): Observable<any>;
    getConcepts<T>(cartID: string): Observable<T>;
    cartShopifyDelete(body: any): Observable<any>;
    cartBigCommerceDelete<T>(cardId: string, itemId: string): Observable<T>;
    cartMagentoDelete(body: IMagentoDeleteBody[]): Observable<AjaxResponse>;
    private urlProductChange;
}
